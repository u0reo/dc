services:
  traefik:
    container_name: traefik
    hostname: traefik
    image: traefik:v3.4
    restart: unless-stopped
    network_mode: host # IPv6対応
    ports:
      - 80:80/tcp # HTTP
      - 443:443/tcp # HTTPS
      - 443:443/udp # HTTPS3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /opt/dc/traefik/configs:/configs:ro
      - /opt/dc/traefik/certificates:/certificates:rw
    # network_mode: hostで運用する場合、ここのlabelsは読み込まれないので
    # ダッシュボード等を使いたい場合はservice: api@internalとしたルートファイルの作成が必要
    # labels:
    #   traefik.enable: true
    #   traefik.http.routers.traefik.rule: Host(`traefik.$DOMAIN`)
    #   traefik.http.routers.traefik.entrypoints: https
    #   traefik.http.routers.traefik.middlewares: authelia@docker
    #   traefik.http.routers.traefik.service: api@internal
    command:
      - --ping=true # HealthCheck用にping機能を有効化
      - --api.insecure=true # API/ダッシュボードを有効化
      - --global.sendAnonymousUsage=false # 使用状況を送信しない
      - --entrypoints.http=true # HTTPで待ち受け
      - --entrypoints.http.address=:80 # HTTPは80ポートで待ち受け
      - --entrypoints.http.http.redirections.entrypoint.to=https # HTTPはHTPSにリダイレクト
      - --entrypoints.http.http.redirections.entrypoint.scheme=https # HTTPはHTPSにリダイレクト
      - --entrypoints.https=true # HTTPSで待ち受け
      - --entrypoints.https.address=:443 # HTTPSは443ポートで待ち受け
      - --entrypoints.https.http.tls=true # HTTPSはTLSを有効化
      - --entrypoints.https.http.tls.certResolver=letsencrypt # HTTPSは「letsencrypt」の証明書を使用
      - --entrypoints.https.http.tls.domains[0].main=$DOMAIN
      - --entrypoints.https.http.tls.domains[0].sans=*.$DOMAIN
      - --entrypoints.https.http3=true # HTTP3対応
      - --log=true # ログの出力を有効化
      - --log.level=INFO # ログのレベルを設定
      - --providers.docker=true # Dockerサポートを有効化
      - --providers.docker.exposedByDefault=false # 構成なしにプロキシしない
      - --providers.file.directory=/configs # 動的構成ファイル追加先を指定
      - --providers.file.watch=true # 動的構成ファイルの変更を監視
      # https://major.io/p/wildcard-letsencrypt-certificates-traefik-cloudflare/
      # https://go-acme.github.io/lego/dns/cloudflare/
      - --certificatesResolvers.letsencrypt.acme.storage=/certificates/acme.json # acme.jsonの保存先
      - --certificatesResolvers.letsencrypt.acme.dnschallenge=true # DNS-01チャレンジを有効化
      - --certificatesResolvers.letsencrypt.acme.dnschallenge.provider=cloudflare # CloudflareのAPIを使用
      - --certificatesResolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53 # 名前解決にCloudflareのDNSを使用
    environment:
      # ゾーン>>DNS(読み書き) と ゾーン>>ゾーン(読み取り) の権限が必要
      # https://dash.cloudflare.com/profile/api-tokens
      CLOUDFLARE_DNS_API_TOKEN: $CLOUDFLARE_API_TOKEN
    healthcheck:
      test: ['CMD-SHELL', 'traefik healthcheck --ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
